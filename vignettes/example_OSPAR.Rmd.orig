---
title: "HELCOM"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{HELCOM}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

# Intro

But before we get to any of that, we need to set up the environment.
First, load the `harsat` library (let's assume that you have already installed
it, as covered in the [Getting Started](/harsat.html) guide).

```{r}
library(harsat)
```

And load the R package `here`, because we use the working directory to find
the data files. If you use your own data files, you will need to point to
a directory containing a copy.

```{r}
library(here)
working.directory <- here()
```

```{r ospar-water-data}
water_data <- read_data(
  compartment = "water",
  purpose = "OSPAR",
  contaminants = "water.txt",
  stations = "stations.txt",
  data_dir = file.path(working.directory, "data", "example_OSPAR"),
  info_dir = file.path(working.directory, "information", "OSPAR_2022"),
  extraction = "2023/08/23"
)

water_data <- tidy_data(water_data)
```

```{r ospar-water-timeseries}
water_timeseries <- create_timeseries(
  water_data,
  determinands.control = list(
    CHR = list(det = "CHRTR", action = "replace"),
    BBKF = list(det = c("BBF", "BKF", "BBJF", "BBJKF"), action = "bespoke"),
    PFOS = list(det = c("N-PFOS", "BR-PFOS"), action = "sum"),
    CB138 = list(det = c("CB138+163"), action = "replace"),
    HCEPX = list(det = c("HCEPC", "HCEPT"), action = "sum"), 
    HCH = list(det = c("HCHA", "HCHB", "HCHG"), action = "sum")
  )
)
```

```{r ospar-water-assessment}
water_assessment <- run_assessment(
  water_timeseries, 
  AC = "EQS", 
  parallel = TRUE
)

check_assessment(water_assessment)
```

```{r ospar-summary-directory}
summary.dir <- file.path(working.directory, "output", "example_OSPAR")
if (!dir.exists(summary.dir)) {
  dir.create(summary.dir, recursive = TRUE)
}
```

```{r ospar-water-summary}
write_summary_table(
  water_assessment,
  determinandGroups = list(
    levels = c(
      "Metals", "Organotins", "PAH_parent",  "Organofluorines", 
      "Chlorobiphenyls", "Organochlorines", "Pesticides"
    ),  
    labels = c(
      "Metals", "Organotins", "PAH parent compounds", "Organofluorines", 
      "Polychlorinated biphenyls", "Organochlorines (other)", "Pesticides"
    )
  ),
  classColour = list(
    below = c("EQS" = "green"), 
    above = c("EQS" = "red"), 
    none = "black"
  ),
  collapse_AC = list(EAC = "EQS"),
  output_dir = summary.dir
)
```

Now, let's take a look at that in the `water_summary.csv` file:

```{r ospar-water-summary-render,echo=FALSE}
summary.data <- read.csv(file.path(summary.dir, "water_summary.csv"))
knitr::kable(summary.data, format = "html", table.attr = "class=\'datatable\'")
```

# Sediment

```{r ospar-sediment-data}
sediment_data <- read_data(
  compartment = "sediment", 
  purpose = "OSPAR",
  contaminants = "sediment.txt", 
  stations = "stations.txt", 
  data_dir = file.path(working.directory, "data", "example_OSPAR"),
  info_dir = file.path(working.directory, "information", "OSPAR_2022"), 
  extraction = "2023/08/23"
)  
sediment_data <- tidy_data(sediment_data)
```

```{r ospar-sediment-timeseries}
info_TEQ <- c(
  "CB77" = 0.0001, "CB81" = 0.0003, "CB105" = 0.00003, "CB118" = 0.00003, 
  "CB126" = 0.1, "CB156" = 0.00003, "CB157" = 0.00003, "CB167" = 0.00003, 
  "CB169" = 0.03, "CDD1N" = 1, "CDD4X" = 0.1, "CDD6P" = 0.01, "CDD6X" = 0.1, 
  "CDD9X" = 0.1, "CDDO" = 0.0003, "CDF2N" = 0.3, "CDF2T" = 0.1, "CDF4X" = 0.1, 
  "CDF6P" = 0.01, "CDF6X" = 0.1, "CDF9P" = 0.01,
  "CDF9X" = 0.1, "CDFO" = 0.00003, "CDFP2" = 0.03, "CDFX1" = 0.1, "TCDD" = 1
)

sediment_timeseries <- create_timeseries(
  sediment_data,
  determinands.control = list(
    CHR = list(det = "CHRTR", action = "replace"),
    BBKF = list(det = c("BBF", "BKF", "BBJF", "BBJKF"), action = "bespoke"),
    NAPC1 = list(det = c("NAP1M", "NAP2M"), action = "sum"),
    BD154 = list(det = "PBB153+BD154", action = "replace"),
    HBCD = list(det = c("HBCDA", "HBCDB", "HBCDG"), action = "sum"),
    CB138 = list(det = c("CB138+163"), action = "replace"),
    CB156 = list(det = c("CB156+172"), action = "replace"),
    TEQDFP = list(det = names(info_TEQ), action = "bespoke"),
    HCEPX = list(det = c("HCEPC", "HCEPT"), action = "sum")
  ),
  normalise = normalise_sediment_OSPAR,
  normalise.control = list(
    metals = list(method = "pivot", normaliser = "AL"), 
    organics = list(method = "simple", normaliser = "CORG", value = 2.5),
    exclude = expression(ospar_subregion %in% c("Iberian Coast", "Gulf of Cadiz"))
  )
)
```

```{r ospar-sediment-assessment}
sediment_assessment <- run_assessment(
  sediment_timeseries, 
  AC = c("BAC", "EAC", "EQS", "ERL", "FEQG"),
  parallel = TRUE
)

check_assessment(water_assessment)
```


```{r ospar-sediment-summary}
write_summary_table(
  sediment_assessment,
  determinandGroups = list(
    levels = c(
      "Metals", "Organotins", "PAH_parent", "PAH_alkylated",  
      "PBDEs", "Organobromines", "Chlorobiphenyls", "Dioxins", 
      "Organochlorines"
    ),
    labels = c(
      "Metals", "Organotins", "PAH parent compounds", "PAH alkylated compounds", 
      "Polybrominated diphenyl ethers", "Organobromines (other)", 
      "Polychlorinated biphenyls", "Dioxins", "Organochlorines (other)"
    )
  ),
  classColour = list(
    below = c(
      "BAC" = "blue", 
      "ERL" = "green", 
      "EAC" = "green", 
      "EQS" = "green", 
      "FEQG" = "green"
    ),
    above = c(
      "BAC" = "orange", 
      "ERL" = "red", 
      "EAC" = "red", 
      "EQS" = "red", 
      "FEQG" = "red"
    ),
    none = "black"
  ),
  collapse_AC = list(BAC = "BAC", EAC = c("EAC", "ERL", "EQS", "FEQG")),
  output_dir = summary.dir
)
```

Now, let's take a look at that in the `sediment_summary.csv` file:

```{r ospar-sediment-summary-render,echo=FALSE}
summary.data <- read.csv(file.path(summary.dir, "sediment_summary.csv"))
knitr::kable(summary.data, format = "html", table.attr = "class=\'datatable\'")
```

<link rel="stylesheet" href="https://cdn.datatables.net/1.13.5/css/dataTables.bootstrap5.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js" integrity="sha512-3gJwYpMe3QewGELv8k/BX9vcqhryRdzRMxVfq6ngyWXwo03GFEzjsUm8Q7RZcHPHksttq7/GFoxjCVUjkjvPdw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdn.datatables.net/1.13.5/js/dataTables.bootstrap5.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
$('.datatable').dataTable();
</script>

